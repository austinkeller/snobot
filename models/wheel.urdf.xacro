<?xml version="1.0"?>
<!--
    Defines the "wheel" macro in xacro, which creates the following elements for
    a single drive wheel in a robot with up to 4 such wheels: 
        <link>
        <gazebo>
        <joint>
        <trasmission>
        
    These properties for wheel radius and positioning must be defined outside of this file:
        wheel_radius    : radius of wheel cylinder
        wheel_thickness : height of wheel cylinder
        wheel_mass      : mass of wheel in kilograms
        
    You must supply these parameters to use the "wheel" macro:
        fb          : one of {front, back} if 4 wheels; value doesn't matter if 2 wheels
        lr          : one of {left, right}
        parent      : name of parent link of the wheel joint (where it's attached)
        translateX  : distance from base X-origin to wheel joint X-origin 
        translateY  : distance from base Y-origin to wheel joint Y-origin 
        translateZ  : distance from base Z-origin to wheel joint Z-origin
        flipY       : 90-degree roll factor for wheel plane about base's X-axis; one of {1, -1}
-->
<robot name="wheel" xmlns:xacro="http://ros.org/wiki/xacro">
  
    <!-- Wheel properties -->
    <xacro:property name="transmission_ratio" value="1" />    <!-- mechanical reduction -->
    <!-- end - properties -->
  
    <!-- "Constants" -->
    <property name="deg_to_rad" value="0.01745329251994329577"/>


    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                 iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                 izz="${m*r*r/2}" /> 
    </xacro:macro>
  
  
    <xacro:macro name="wheel" params="fb lr parent translateX translateY translateZ flipY"> <!--fb : front, back ; lr: left, right -->
        <link name="${fb}_${lr}_wheel">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" /> 
                <geometry>
                    <cylinder length="${wheel_thickness}" radius="${wheel_radius}" />
                </geometry>
                <material name="gray">
                    <color rgba="0.5 0.5 0.5 1"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${wheel_thickness}" radius="${wheel_radius}" />
                </geometry>
            </collision>
            <inertial>
                <mass value="${wheel_mass}" />
                <origin xyz="0 0 0" />
                <cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_thickness}" />
            </inertial>
        </link>

        <gazebo reference="${fb}_${lr}_wheel">
            <mu1 value="1.0"/>
            <mu2 value="1.0"/>
            <kp  value="10000000.0" />
            <kd  value="1.0" />
            <fdir1 value="1 0 0"/>
            <material>Gazebo/Grey</material>
            <turnGravityOff>false</turnGravityOff>
        </gazebo>

        <joint name="${fb}_${lr}_wheel_joint" type="continuous">
            <parent link="${parent}"/>
            <child link="${fb}_${lr}_wheel"/>
            <origin xyz="${translateX} ${translateY} ${translateZ}" rpy="${flipY*pi/2} 0 0" /> 
            <axis xyz="0 0 1" rpy="0 0 0" />
            <limit effort="100" velocity="100"/>
            <joint_properties damping="0.0" friction="0.0"/>
        </joint>

        <!-- Transmission is important to link the joints and the controller -->
        <transmission name="${fb}_${lr}_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${fb}_${lr}_wheel_joint" />
            <actuator name="${fb}_${lr}_wheel_joint_motor">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
                <mechanicalReduction>${transmission_ratio}</mechanicalReduction>
            </actuator>
        </transmission>
   
    </xacro:macro>
</robot>
